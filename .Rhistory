romania_data$employed_binary <- as.integer(romania_data$employed_binary == 1)
logit_model_ro <- glm(employed_binary ~ ., data = romania_data, family = binomial)
summary(logit_model_ro)
vars_ro <- c(
"introduction_resp_age",
"demographics_resp_activity",
"diff_lack_of_decent_employment",
"diff_lack_childcare",
"diff_none",
"needs_host_govt_assistance","income_other_sources",
"diff_lack_of_skills",
"diff_need_to_take_care_of_others",
"diff_not_looking_for_work"
)
romania_data <- combined_data |>
filter(country == "Romania") |>
select(employed_binary, all_of(vars_ro)) |>
drop_na()
romania_data$employed_binary <- as.integer(romania_data$employed_binary == 1)
logit_model_ro <- glm(employed_binary ~ ., data = romania_data, family = binomial)
summary(logit_model_ro)
pR2(logit_model_ro)
pred_probs_ro <- predict(logit_model_ro, type = "response")
pred_class_ro <- ifelse(pred_probs_ro > 0.5, 1, 0)
table(Predicted = pred_class_ro, Actual = romania_data$employed_binary)
mean(pred_class_ro == romania_data$employed_binary)
roc_obj_ro <- roc(romania_data$employed_binary, pred_probs_ro)
plot(roc_obj_ro)
auc(roc_obj_ro)
imp <- importance(rf_model)
top_vars <- rownames(imp)[order(imp[, "MeanDecreaseAccuracy"],
decreasing = TRUE)][1:15]
varImpPlot(rf_model)
model_data_selected <- model_data[, c("employed_binary", top_vars)]
model_data_selected$employed_binary <-
as.integer(model_data_selected$employed_binary == "Yes")
imp <- importance(rf_model)
top_vars <- rownames(imp)[order(imp[, "MeanDecreaseAccuracy"],
decreasing = TRUE)][1:15]
varImpPlot(rf_model)
model_data_selected <- model_data[, c("employed_binary", top_vars)]
model_data_selected$employed_binary <-
as.integer(model_data_selected$employed_binary == "Yes")
imp <- importance(rf_model)
top_vars <- rownames(imp)[order(imp[, "MeanDecreaseAccuracy"],
decreasing = TRUE)][1:15]
varImpPlot(rf_model)
model_data_selected <- model_data[, c("employed_binary", top_vars)]
model_data_selected$employed_binary <-
as.integer(model_data_selected$employed_binary == "Yes")
imp <- importance(rf_model)
top_vars <- rownames(imp)[order(imp[, "MeanDecreaseAccuracy"],
decreasing = TRUE)][1:15]
varImpPlot(rf_model)
model_data_selected <- model_data[, c("employed_binary", top_vars)]
model_data_selected$employed_binary <-
as.integer(model_data_selected$employed_binary == "Yes")
imp <- importance(rf_model)
top_vars <- rownames(imp)[order(imp[, "MeanDecreaseAccuracy"],
decreasing = TRUE)][1:15]
varImpPlot(rf_model)
model_data_selected <- model_data[, c("employed_binary", top_vars)]
model_data_selected$employed_binary <-
as.integer(model_data_selected$employed_binary == "Yes")
imp <- importance(rf_model)
top_vars <- rownames(imp)[order(imp[, "MeanDecreaseAccuracy"],
decreasing = TRUE)][1:15]
varImpPlot(rf_model)
model_data_selected <- model_data[, c("employed_binary", top_vars)]
model_data_selected$employed_binary <-
as.integer(model_data_selected$employed_binary == "Yes")
varImpPlot(rf_model, main = "Variable Importance: Random Forest Model")
par(mar = c(7, 6, 4, 2), las = 2)
varImpPlot(rf_model, main = "Variable Importance: Random Forest Model")
act_host <- combined_data |>
filter(
!is.na(host_country_work_coa),
!country %in% c("Hungary", "Bulgaria", "construct", NA)
) |>
count(country, host_country_work_coa) |>
group_by(country) |>
mutate(percent = n / sum(n) * 100) |>
ggplot(aes(x = country, y = percent,
fill = fct_infreq(host_country_work_coa))) +
geom_col() +
xlab("Country") +
ggtitle("Host Country Activities") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45,  hjust = 0.8, size = 6),
legend.position = "right"
) +
guides(fill = guide_legend(title = "Activity")) +
scale_fill_brewer(palette = "Dark2") +
theme(legend.position = "none") + ylab(NULL)
act_ukr <- combined_data|>
filter(
!is.na(host_country_work_coa),
!country %in% c("Hungary", "Bulgaria", "construct", NA)
) |>
filter(!is.na(demographics_resp_activity),
demographics_resp_activity != "No Answer") |>
count(country, demographics_resp_activity) |>
group_by(country) |>
mutate(percent = n / sum(n) * 100) |>
ggplot(aes(x = country, y = percent,
fill = demographics_resp_activity)) +
geom_col(position = "stack") +
xlab("Country") +
ylab("Percent") +
ggtitle("Employment Activity in Ukraine") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45,  hjust = 0.8, size = 6),
legend.position = "right"
) +
guides(fill = guide_legend(title = "Activity Type")) +
scale_fill_brewer(palette = "Dark2") + theme(legend.position = "none")
shared_legend <- get_legend(act_host + theme(legend.position = "right"))
combined_plot <- plot_grid(
act_ukr, act_host,
labels = NULL,
ncol = 2,
align = "hv"
)
plot_grid(
combined_plot, shared_legend,
ncol = 2,
rel_widths = c(0.5, 0.2)
)
combined_df |>
filter(!Country %in% c("Hungary", "Bulgaria", "construct", NA)) |>
filter(Source == "benefits") |>
mutate(Percent = round(Total_Proportion * 100, 2)) |>
select(Component, Percent, Country) |>
group_by(Country) |>
arrange(desc(Percent), .by_group = TRUE) |>
slice_head(n = 5) |>
ungroup() |>
ggplot(aes(x = reorder(Component, -Percent),
y = Percent, fill = Component)) +
geom_col(show.legend = TRUE) +
facet_wrap(~Country, scales = "free_x") +
xlab("Income Source") + ylab("Percent") +
ggtitle("Social Protection Benefits from Host Country") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45,  hjust = 0.8, size = 6)) +
guides(fill = guide_legend(title = "Type")) +
scale_fill_brewer(palette = "Dark2")
#Aggregated data
combined_df |>
filter(Source == "income") |>
mutate(Percent = round(Total_Proportion * 100, 2))|>
select(Component, Percent, Country) |>
group_by(Country) |>
arrange(desc(Percent), .by_group = TRUE) |>
slice_head(n = 5) |>
ungroup() |>
ggplot(aes(x = reorder(Component, -Percent),
y = Percent, fill = Component)) +
geom_col(show.legend = TRUE) +
facet_wrap(~Country, scales = "free_x") +
xlab("Income Source") + ylab("Percent") +
ggtitle("Comparison of Reported Income Sources by Country") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45,  hjust = 1, size = 6)) +
guides(fill = guide_legend(title = "Income Source"))+
scale_fill_brewer(palette = "Dark2")
vars_pl <- c(
"introduction_resp_age",
"demographics_resp_activity",
"income_social_protection_host_govt",
"income_remmittances",
"income_social_protection_ukr_govt",
"diff_lack_of_lang",
"diff_lack_childcare",
"diff_lack_of_skills",
"diff_lack_of_education_skills",
"diff_none",
"income_remmittances",
"diff_lack_childcare",
"diff_not_looking_for_work",
"diff_lack_of_age_opportunities"
)
vars_ee <- c(
"demographics_resp_activity",
"diff_lack_of_lang",
"diff_lack_of_documentation",
"benefits_cash_benefits",
"benefits_unemployment_grant",
"hostile_comments_social_media",
"diff_loss_benefits",
"needs_employment"
)
vars_cz <- c(
"demographics_resp_activity",
"income_social_protection_host_govt",
"diff_lack_of_lang",
"diff_none",
"hostile_verbal_aggression",
"diff_lack_of_decent_employment",
"diff_lack_childcare",
"diff_not_looking_for_work"
)
vars_ml <- c(
"demographics_resp_activity",
"diff_lack_of_lang",
"diff_lack_of_skills",
"diff_lack_of_info",
"diff_none",
"needs_medical",
"diff_need_to_take_care_of_others",
"needs_humanitarian_assistance"
)
vars_ro <- c(
"introduction_resp_age",
"demographics_resp_activity",
"diff_lack_of_decent_employment",
"diff_lack_childcare",
"diff_none",
"needs_host_govt_assistance",
"income_other_sources",
"diff_lack_of_skills",
"diff_need_to_take_care_of_others",
"diff_not_looking_for_work"
)
vars_sk <- c(
"introduction_resp_age",
"demographics_resp_activity",
"income_social_protection_host_govt",
"diff_lack_of_skills",
"diff_not_looking_for_work",
"needs_host_govt_assistance",
"needs_humanitarian_assistance",
"diff_none",
"needs_host_govt_assistance",
"benefits_cash_benefits"
)
all_vars <- sort(unique(c(vars_pl, vars_ee, vars_cz, vars_ml, vars_ro, vars_sk)))
df <- data.frame(
Predictor = all_vars,
Poland = ifelse(all_vars %in% vars_pl, "✔", ""),
Estonia = ifelse(all_vars %in% vars_ee, "✔", ""),
Czechia = ifelse(all_vars %in% vars_cz, "✔", ""),
Moldova = ifelse(all_vars %in% vars_ml, "✔", ""),
Romania = ifelse(all_vars %in% vars_ro, "✔", ""),
Slovakia = ifelse(all_vars %in% vars_sk, "✔", ""),
stringsAsFactors = FALSE
)
print(df, row.names = FALSE)
df |>
kable(booktabs = TRUE, align = "c",
col.names = c("Predictor", "Poland", "Estonia", "Czechia", "Moldova", "Romania", "Slovakia")) |>
kable_styling(latex_options = c("striped"), font_size = 12) |>
column_spec(1, bold = TRUE, width = "10cm") |>
row_spec(0, bold = TRUE, color = "white", background = "gray") |>
add_header_above(c(" " = 1, "Selected Predictors by Country" = 6))
estonia_data <- combined_data |>
filter(country == "Estonia") |>
select(employed_binary, all_of(vars_ee_small)) |>
drop_na()
vars_ee_small <- c(
"demographics_resp_activity",
"diff_lack_of_lang",
"diff_lack_of_documentation",
"benefits_cash_benefits",
"benefits_unemployment_grant",
"diff_loss_benefits",
"needs_employment"
)
estonia_data <- combined_data |>
filter(country == "Estonia") |>
select(employed_binary, all_of(vars_ee_small)) |>
drop_na()
vars_ee <- c(
"demographics_resp_activity",
"diff_lack_of_lang",
"diff_lack_of_documentation",
"benefits_cash_benefits",
"benefits_unemployment_grant",
"hostile_comments_social_media",
"diff_loss_benefits",
"needs_employment"
)
vars_ee_small <- c(
"demographics_resp_activity",
"diff_lack_of_lang",
"diff_lack_of_documentation",
"benefits_cash_benefits",
"benefits_unemployment_grant",
"diff_loss_benefits",
"needs_employment"
)
vars_ee_small <- c(
"demographics_resp_activity",
"diff_lack_of_lang",
"diff_lack_of_documentation",
"benefits_cash_benefits",
"benefits_unemployment_grant",
"diff_loss_benefits",
"needs_employment"
)
estonia_data <- combined_data |>
filter(country == "Estonia") |>
select(employed_binary, all_of(vars_ee)) |>
drop_na()
estonia_data$employed_binary <- as.integer(estonia_data$employed_binary == 1)
logit_model_ee <- glm(employed_binary ~ ., data = estonia_data, family = binomial)
summary(logit_model_ee)
estonia_data_small <- combined_data |>
filter(country == "Estonia") |>
select(employed_binary, all_of(vars_ee_small)) |>
drop_na()
estonia_data_small$employed_binary <- as.integer(estonia_data_small$employed_binary == 1)
logit_model_ee_small <- glm(employed_binary ~ ., data = estonia_data_small, family = binomial)
summary(logit_model_ee_small)
anova(logit_model_ee_small, logit_model_ee)
View(combined_df)
# Aggregate: Calculate proportion reporting language difficulty per age group per country
lang_diff_summary <- combined_data %>%
group_by(country, introduction_resp_age) %>%
summarise(
count = n(),
reported_difficulty = sum(diff_lack_of_lang, na.rm = TRUE),
proportion = reported_difficulty / count
) %>%
ungroup()
# Plot
ggplot(lang_diff_summary, aes(x = introduction_resp_age, y = proportion, fill = introduction_resp_age)) +
geom_col(position = "dodge") +
facet_wrap(~ country) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
labs(
title = "Reported Language Difficulties by Age Group and Country",
x = "Age Group",
y = "Proportion Reporting Language Difficulty",
fill = "Age Group"
) +
theme_minimal(base_size = 13) +
theme(legend.position = "none")
act_host <- combined_data |>
filter(
!is.na(host_country_work_coa),
!country %in% c("Hungary", "Bulgaria", "construct", NA)
) |>
count(country, host_country_work_coa) |>
group_by(country) |>
mutate(percent = n / sum(n) * 100) |>
ggplot(aes(x = country, y = percent,
fill = fct_infreq(host_country_work_coa))) +
geom_col() +
xlab("Country") +
ggtitle("Host Country Activities") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "right"
) +
guides(fill = guide_legend(title = "Activity")) +
scale_fill_brewer(palette = "Dark2") +
theme(legend.position = "none") + ylab(NULL)
act_ukr <- combined_data|>
filter(
!is.na(host_country_work_coa),
!country %in% c("Hungary", "Bulgaria", "construct", NA)
) |>
filter(!is.na(demographics_resp_activity),
demographics_resp_activity != "No Answer") |>
count(country, demographics_resp_activity) |>
group_by(country) |>
mutate(percent = n / sum(n) * 100) |>
ggplot(aes(x = country, y = percent,
fill = demographics_resp_activity)) +
geom_col(position = "stack") +
xlab("Country") +
ylab("Percent") +
ggtitle("Employment Activity in Ukraine") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "right"
) +
guides(fill = guide_legend(title = "Activity Type")) +
scale_fill_brewer(palette = "Dark2") +
theme(legend.position = "none")
shared_legend <- get_legend(act_host +
theme(legend.position = "right"))
combined_plot <- plot_grid(
act_ukr, act_host,
labels = NULL,
ncol = 2,
align = "hv"
)
plot_grid(
combined_plot, shared_legend,
ncol = 2,
rel_widths = c(0.5, 0.2)
)
combined_df |>
filter(!Country %in% c("Hungary", "Bulgaria", "construct", NA)) |>
filter(Source == "benefits") |>
mutate(Percent = round(Total_Proportion * 100, 2)) |>
select(Component, Percent, Country) |>
group_by(Country) |>
arrange(desc(Percent), .by_group = TRUE) |>
slice_head(n = 5) |>
ungroup() |>
ggplot(aes(x = reorder(Component, -Percent),
y = Percent, fill = Component)) +
geom_col(show.legend = TRUE) +
facet_wrap(~Country, scales = "free_x") +
xlab("Social Protection Benefits") + ylab("Percent") +
ggtitle("Social Protection Benefits from Host Country") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(fill = guide_legend(title = "Type")) +
scale_fill_brewer(palette = "Dark2")
combined_df |>
filter(!Country %in% c("Hungary", "Bulgaria", "construct", NA)) |>
filter(Source == "needs") |>
mutate(Percent = round(Total_Proportion * 100, 2)) |>
select(Component, Percent, Country) |>
group_by(Country) |>
arrange(desc(Percent), .by_group = TRUE) |>
slice_head(n = 5) |>
ungroup() |>
ggplot(aes(x = reorder(Component, -Percent),
y = Percent, fill = Component)) +
geom_col(show.legend = TRUE) +
facet_wrap(~Country, scales = "free_x") +
xlab("Type of need") + ylab("Percent") +
ggtitle("Socioeconomic needs") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(fill = guide_legend(title = "Type")) +
scale_fill_brewer(palette = "Dark2")
#Aggregated data
combined_df |>
filter(!Country %in% c("Hungary", "Bulgaria", "construct", NA)) |>
filter(Source == "job") |>
mutate(Percent = round(Total_Proportion * 100, 2)) |>
select(Component, Percent, Country) |>
group_by(Country) |>
arrange(desc(Percent), .by_group = TRUE) |>
slice_head(n = 5) |>
ungroup() |>
ggplot(aes(x = reorder(Component, -Percent),
y = Percent, fill = Component)) +
geom_col(show.legend = TRUE) +
facet_wrap(~Country, scales = "free_x") +
xlab("Problem type") + ylab("Percent") +
ggtitle("Problems with Finding Employment") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(fill = guide_legend(title = "Reasons")) +
scale_fill_brewer(palette = "Dark2")
model_data <- combined_data |>
filter(host_country_work_coa != "Retired") |>  # Exclude retirees
select(employed_binary, all_of(important_vars)) |>
drop_na() |>
mutate(
employed_binary = factor(employed_binary, levels = c(0, 1),
labels = c("No", "Yes"))
)
rf_model <- randomForest(employed_binary ~ ., data = model_data,
ntree = 500, mtry = 2, importance = TRUE)
imp <- importance(rf_model)
top_vars <- rownames(imp)[order(imp[, "MeanDecreaseAccuracy"],
decreasing = TRUE)][1:15]
varImpPlot(rf_model, main = "Variable Importance: Random Forest Model")
model_data_selected <- model_data[, c("employed_binary", top_vars)]
model_data_selected$employed_binary <-
as.integer(model_data_selected$employed_binary == "Yes")
logit_model <- glm(employed_binary ~ .,
data = model_data_selected, family = binomial)
summary(logit_model)
pR2(logit_model)
pred_probs <- predict(logit_model, type = "response")
pred_class <- ifelse(pred_probs > 0.5, 1, 0)
table(Predicted = pred_class, Actual = model_data_selected$employed_binary)
mean(pred_class == model_data_selected$employed_binary)
roc_obj <- roc(model_data_selected$employed_binary, pred_probs)
plot(roc_obj)
auc(roc_obj)
czechia_data <- combined_data |>
filter(country == "Czechia") |>
select(employed_binary, all_of(vars_cz)) |>
drop_na()
czechia_data$employed_binary <- as.integer(czechia_data$employed_binary == 1)
logit_model_cz <- glm(employed_binary ~ ., data = czechia_data, family = binomial)
summary(logit_model_cz)
estonia_data <- combined_data |>
filter(country == "Estonia") |>
select(employed_binary, all_of(vars_ee)) |>
drop_na()
estonia_data$employed_binary <- as.integer(estonia_data$employed_binary == 1)
logit_model_ee <- glm(employed_binary ~ ., data = estonia_data, family = binomial)
summary(logit_model_ee)
slovakia_data <- combined_data |>
filter(country == "Slovakia") |>
select(employed_binary, all_of(vars_sk)) |>
drop_na()
slovakia_data$employed_binary <- as.integer(slovakia_data$employed_binary == 1)
logit_model_sk <- glm(employed_binary ~ ., data = slovakia_data, family = binomial)
summary(logit_model_sk)
poland_data <- combined_data |>
filter(country == "Poland") |>
select(employed_binary, all_of(vars_pl)) |>
drop_na()
poland_data$employed_binary <- as.integer(poland_data$employed_binary == 1)
logit_model_pl <- glm(employed_binary ~ ., data = poland_data, family = binomial)
summary(logit_model_pl)
