---
title: "ukrainians"
format: html
editor: 
  markdown: 
    wrap: 72
---

```{r setup, include=FALSE}
# set code chunk option defaults
knitr::opts_chunk$set(
  # display code as types
  tidy = FALSE, 
  # slightly smaller code font
  size = "small",
  # do not display messages in PDF
  message = FALSE,
  # set default figure width and height
  fig.width = 5, fig.height = 3) 
```

```{r, include=FALSE}

# Load necessary packages
if (!require('pacman')) install.packages('pacman'); library('pacman')
pacman::p_load(viridis, tidyverse, ggplot2, lubridate, knitr, dplyr, ggpubr, 
              janitor, tidyr, kableExtra, ggcorrplot, ggthemes, zoo, forcats,
              gridExtra, grid, Hmisc, FSA, dunn.test, readxl, RColorBrewer,
              patchwork, cowplot, pROC, rms)
# Load data
data_ee <- readRDS("Data/data_ee")
combined_df <- readRDS("Data/combined_df")
reasons_country_ee <- readRDS("Data/reasons_country_ee")
combined_data <- readRDS("Data/combined_data")
```

**Introduction**
Potential research questions: - Which factors are associated with
economic self-sufficiency? (affording more goods) - What influences the
decision to return (temporarily or permanently) to Ukraine? - Does
perceived hostility or social cohesion affect intent to stay?

The geographical scope of the analysis includes countries in Central and Eastern Europe, such as Estonia, Poland, Czechia, Slovakia, Romania, Moldova. While some data is available for all countries, other variables are available only for a subset of countries. The main goals of the study include describing the socio-economic profiles of Ukrainian refugees in these countries; compare the quality of accommodation, services, and support; identify factors associated with economic self-sufficiency and the decision to return to Ukraine; examine the impact of social cohesion or perceived hostility on refugees’ intent to stay or move.

*Data and methods*

This study employs Multi-Sectoral Needs Assessments (MSNA) of 2023, which provide data on Ukrainian refugees' needs and priorities in Estonia, Slovakia, Poland, Romania, Moldova, and Czechia. The assessment employs both household-level and individual-level data collected through structured surveys in all the countries.

**Data Wrangling and Preparation**

To enable cross-regional comparisons, variables that were consistently present across all six national datasets were selected and merged into a single dataset. Questions allowing multiple responses (e.g., types of support received, reasons for unemployment, barriers to accessing services) were transformed using one-hot encoding into a series of binary indicator variables (1 = selected, 0 = not selected) to show each of the possible response categories in disaggregated form. Where categorical responses varied slightly across countries (e.g., differences in wording or coding), the values were recoded into a uniform format for comparison. 

For the convenience of exploratory data analysis (EDA) and model building, the outcome variable (employment status) was defined as follows:

- Respondents were classified as employed (1) if they reported any form of employment.
- All others (unemployed, in education, retired, or not working due to other factors) were classified as unemployed (0).

This two-category outcome variable, Employed, was used as the dependent variable for all the following regression and classification models.

Based on the proportions of missing data and their impact on model performance, non-available observations were excluded or imputed. Individual aggregated dataframes were created so that the distribution of binary-coded multi-response variables could be visualized and country-level comparisons could be made.

**Statistical Modeling**

Logistic regression and random forest classification were applied in an attempt to identify influential factors concerning employment among Ukrainian refugees:

- Random Forest Classifier

A random forest model was trained to account for potential non-linearities and interactions between variables. The model was trained using predictors selected based on feature importance scores. Its performance was evaluated using classification measures such as accuracy, precision, recall, and area under the ROC curve (AUC). Random forest allowed for selection of the most significant predictors of job-finding based on mean decrease in impurity (Gini importance) and permutation importance.

- Logistic Regression

Binary logistic regression analysis was used to estimate the probability of employment (Employed = 1). Independent variables included demographic and socio-economic ones such as age, education level, country of residence, language skills, accommodation, and social services consumption of social services, among others. Odds ratios were estimated to define direction and strength of associations.

**Ukrainian Refugees in Estonia EDA**

**Demographics**

The bar chart displays the distribution of survey respondents by age group (18–34, 35–59, 60+) across six Central and Eastern European countries. Across all countries, the 35–59 age group consistently has the highest number of respondents, followed by the 18–34 group, with the 60+ group being the least represented. Romania stands out with a particularly high concentration of respondents in the 35–59 group compared to the other age categories. Estonia shows a more balanced distribution between the younger and middle-aged groups, though the same pattern persists. In contrast, the data for Poland appears to be missing or not displayed in the chart.

```{r, fig.width=6, fig.height=4, warning=FALSE}
# Function to create a clean proportion table
make_prop_table <- function(variable) {
  tibble(
    Category = names(table(variable, useNA = "ifany")),
    Count = as.numeric(table(variable, useNA = "ifany")),
    Percent = round(100 * (prop.table(table(variable, useNA = "ifany"))), 2)
  )
}

gg <- theme_minimal() +
  theme(
    legend.position = "none",
    plot.title = element_text(size = 10, face = "bold"),
    axis.title = element_text(size = 8),
    axis.text = element_text(size = 7)
  )

combined_data |>
  filter(!is.na(introduction_resp_age), !is.na(country)) |>
  mutate(introduction_resp_age = factor(introduction_resp_age,
                                        levels = c("18-34", "35-59", "60+"))) |>
  count(country, introduction_resp_age) |>
  group_by(country) |>
  mutate(Percent = n / sum(n) * 100) |>
  ggplot(aes(x = country, y = Percent, fill = introduction_resp_age)) +
  geom_bar(stat = "identity") +
  coord_flip() +
  labs(
    x = "Country",
    y = "Percent of Respondents",
    fill = "Age Group",
    title = "Age Distribution of Respondents by Country"
  ) +
  theme_minimal() +
  theme(
    legend.position = "top",
    axis.text.y = element_text(size = 10),
    plot.title = element_text(hjust = 0.5)
  ) +
  guides(fill = guide_legend(title.position = "top", title.hjust = 0.5)) +
  scale_fill_brewer(palette = "Dark2")

```

While the data on education of Ukrainian refugees is limited, the snapshot of age distribution reveals that the majority of arrivals are part of labor force. Notably, in Estonia, 49.46% of arrivals hold a vocational and specialization education, followed by around 38% of refugees with Master or Bachelor degrees. People with secondary education are moderately represented, but there are very few people with PhD education. The largest group is employed, indicating that many refugees were active in the workforce before displacement. Other categories include students, self-employed, and those in housekeeping.

The educational categories range from primary and secondary education to higher levels such as Bachelor's, Master's, and PhD degrees, as well as technical or vocational training and no formal education. "Technical/Vocational" category appears frequently across multiple sections, suggesting a significant portion of the workforce in these regions may have either technical training. This trend could indicate a reliance on skilled labor or informal employment in certain areas. The number of people with Bachelor's degrees is almost the same across all countries and ranges from 10 to 20%. Slovakia and Romania have the highest proportion of people with Master's degrees. There are very few people with no education in all the countries. Slovakia and Czechia appear the most prominent for respondents with PdD degrees. 

```{r, fig.width=7, fig.height=5, warning=FALSE}

combined_data |>
  filter(!country %in% c("Hungary", "Bulgaria", "construct", NA)) |>
  mutate(demographics_educ_level = case_when(
    grepl("tech", demographics_educ_level, ignore.case = TRUE) ~ "Technical/Vocational",
    grepl("sec", demographics_educ_level, ignore.case = TRUE) ~ "Secondary",
    grepl("pri", demographics_educ_level, ignore.case = TRUE) ~ "Primary",
    grepl("phd", demographics_educ_level, ignore.case = TRUE) ~ "PhD",
    grepl("master", demographics_educ_level, ignore.case = TRUE) ~ "Master's",
    grepl("bachelor", demographics_educ_level, ignore.case = TRUE) ~ "Bachelor's",
    grepl("no_edu", demographics_educ_level, ignore.case = TRUE) ~ "No Education",
    grepl("prefer", demographics_educ_level, ignore.case = TRUE) ~ "No Answer",
    grepl("spec", demographics_educ_level, ignore.case = TRUE) ~ "Specialization",
    TRUE ~ demographics_educ_level
  )) |>
  filter(!is.na(demographics_educ_level) & demographics_educ_level != "No Answer") |>
  count(country, demographics_educ_level) |>
  group_by(country) |>
  mutate(prop = n / sum(n) * 100) |>
  ggplot(aes(x = fct_infreq(demographics_educ_level), y = prop, fill = demographics_educ_level)) +
  geom_col() +
  facet_wrap(~country) +
  xlab("Education Level") +
  ylab("Percent") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  guides(fill = guide_legend(title = "Education Level")) +
  scale_fill_brewer(palette = "Dark2")

```

It is needed to understand why refugees choose to resettle in specific states in order to evaluate integration policy and strategy responses. Demographic trends provide a general regional overview, but Estonia offers more detailed information on legal and individual determinants influencing refugees' decisions.

In Estonia, 55.76% of the interviewees said they had been subjected to family separation, and reunifying with family was among the most frequently cited reasons for choosing the destination. Language, geographic closeness, labor market opportunities, and cultural familiarity were also major determinants. All of these suggest that emotional, utilitarian, and socio-economic drivers all play a role in shaping refugee choice in destination countries.

```{r}

# Choose top-5 reasons for choosing Estonia
top6 <- reasons_country_ee |>
  dplyr::arrange(desc(Total_Proportion)) |>
  dplyr::slice_head(n = 5)|>
  mutate(Percent = round(Total_Proportion * 100, 2))

ggplot(top6, aes(x = reorder(Component, -Percent), 
                 y = Percent, fill = Percent)) +
  geom_bar(stat = "identity") + gg +
  coord_flip() +
  xlab("What motivated you to come to this country?") + ylab("Count") +
  scale_fill_gradient(low = "lightblue", high = "darkblue") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

**Economic capacity and Aid**

The faceted bar chart indicates the sources of declared income. The most apparent trend is the dominant role of "employment in the host country" as the principal source of income in most countries, especially in Czechia, Estonia, and Slovakia, where it accounts for over 40–50%. Moldova is the exception: "social protection in Ukraine" is the most frequently reported source, and may reflect that there are many refugees there who employ assistance from the home country. Romania has a more balanced split, with employment percentages, other sources, and maintained employment from Ukraine all being similar, however, it also has the highest number of people with no income. Remote work and remittances in Romania and Poland respectively also arise more than anywhere else. Across all countries, rates like "do not know", "prefer not to answer", and "no income" are low. This band shows levels of integration, access to work, and host country versus origin country welfare system reliance.

```{r, fig.height = 7, fig.width=8}

#Aggregated data

combined_df |>
    filter(Source == "income") |>
    mutate(Percent = round(Total_Proportion * 100, 2))|>
    select(Component, Percent, Country) |>
    group_by(Country) |>
    arrange(desc(Percent), .by_group = TRUE) |>
    slice_head(n = 5) |>
    ungroup() |> 
  ggplot(aes(x = reorder(Component, -Percent), 
             y = Percent, fill = Component)) +
  geom_col(show.legend = TRUE) +
  facet_wrap(~Country, scales = "free_x") +
  xlab("Income Source") + ylab("Percent") +
  ggtitle("Comparison of Reported Income Sources by Country") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  guides(fill = guide_legend(title = "Income Source"))+
  scale_fill_brewer(palette = "Dark2")



```


31% of refugees didn't encounter any issues while looking for a job. The main concern, however, was the lack of language as 36% of people faced it. the second biggest obstacle was the lack of opportunities and lack of recognition, as noted by 11% and 7% of people respectively.

```{r, fig.height = 7, fig.width=8}

#Aggregated data

combined_df |>
  filter(!Country %in% c("Hungary", "Bulgaria", "construct", NA)) |>
    filter(Source == "job") |>
    mutate(Percent = round(Total_Proportion * 100, 2)) |>
    select(Component, Percent, Country) |>
    group_by(Country) |>
    arrange(desc(Percent), .by_group = TRUE) |>
    slice_head(n = 5) |>
    ungroup() |> 
  ggplot(aes(x = reorder(Component, -Percent), 
             y = Percent, fill = Component)) +
  geom_col(show.legend = TRUE) +
  facet_wrap(~Country, scales = "free_x") +
  xlab("Income Source") + ylab("Percent") +
  ggtitle("Problems with Finding Employment") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  guides(fill = guide_legend(title = "Reasons")) +
  scale_fill_brewer(palette = "Dark2")
```

```{r, fig.height = 4, fig.width=8}

act_host <- combined_data |>
  filter(
    !is.na(host_country_work_coa),
    !country %in% c("Hungary", "Bulgaria", "construct", NA)
  ) |>
  count(country, host_country_work_coa) |>
  group_by(country) |>
  mutate(percent = n / sum(n) * 100) |>
  ggplot(aes(x = country, y = percent, fill = fct_infreq(host_country_work_coa))) +
  geom_col() +
  xlab("Country") +
  ggtitle("Host Country Activities") +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.position = "right"
  ) +
  guides(fill = guide_legend(title = "Activity")) +
  scale_fill_brewer(palette = "Dark2") + theme(legend.position = "none") + ylab(NULL)

act_ukr <- combined_data|>
  filter(
    !is.na(host_country_work_coa),
    !country %in% c("Hungary", "Bulgaria", "construct", NA)
  ) |>
  filter(!is.na(demographics_resp_activity), demographics_resp_activity != "No Answer") |>
  count(country, demographics_resp_activity) |>
  group_by(country) |>
  mutate(percent = n / sum(n) * 100) |>
  ggplot(aes(x = country, y = percent, fill = demographics_resp_activity)) +
  geom_col(position = "stack") +
  xlab("Country") +
  ylab("Percent") +
  ggtitle("Employment Activity in Ukraine") +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.position = "right"
  ) +
  guides(fill = guide_legend(title = "Activity Type")) +
  scale_fill_brewer(palette = "Dark2") + theme(legend.position = "none")

shared_legend <- get_legend(act_host + theme(legend.position = "right"))

combined_plot <- plot_grid(
  act_ukr, act_host,
  labels = NULL,
  ncol = 2,
  align = "hv"
)
plot_grid(
  combined_plot, shared_legend,
  ncol = 2,  
  rel_widths = c(0.5, 0.2)
)
```


```{r, fig.height = 7, fig.width=8}
combined_df |>
  filter(!Country %in% c("Hungary", "Bulgaria", "construct", NA)) |>
    filter(Source == "benefits") |>
    mutate(Percent = round(Total_Proportion * 100, 2)) |>
    select(Component, Percent, Country) |>
    group_by(Country) |>
    arrange(desc(Percent), .by_group = TRUE) |>
    slice_head(n = 5) |>
    ungroup() |> 
  ggplot(aes(x = reorder(Component, -Percent), 
             y = Percent, fill = Component)) +
  geom_col(show.legend = TRUE) +
  facet_wrap(~Country, scales = "free_x") +
  xlab("Income Source") + ylab("Percent") +
  ggtitle("Social Protection Benefits from Host Country") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  guides(fill = guide_legend(title = "Type")) +
  scale_fill_brewer(palette = "Dark2")
```
```{r, fig.height = 7, fig.width=8}
combined_df |>
  filter(!Country %in% c("Hungary", "Bulgaria", "construct", NA)) |>
    filter(Source == "needs") |>
    mutate(Percent = round(Total_Proportion * 100, 2)) |>
    select(Component, Percent, Country) |>
    group_by(Country) |>
    arrange(desc(Percent), .by_group = TRUE) |>
    slice_head(n = 5) |>
    ungroup() |>
  ggplot(aes(x = reorder(Component, -Percent), 
             y = Percent, fill = Component)) +
  geom_col(show.legend = TRUE) +
  facet_wrap(~Country, scales = "free_x") +
  xlab("Income Source") + ylab("Percent") +
  ggtitle("Socioeconomic needs") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  guides(fill = guide_legend(title = "Type")) +
  scale_fill_brewer(palette = "Dark2")
```



**Safety**

According to data, 35.61% of refugees in Estonia experiences hostile
attitude, that included aggressive comments in news forums online' or
social media, verbal aggression, or physical aggression. In particular,
verbal aggression was one of the main concerns, as 14.6% of people
reported this from of hostile behavior, followed by aggressive comments
on social media and discriminatory behavior accounting for 7% and 6% of
responses respectively.

```{r}

make_prop_table(data_ee$social_cohesion_SC3_SS_EXP_HOSTILE)

combined_df |>
  filter(Source == "cohesion") |>
  mutate(Percent = round(Total_Proportion * 100, 2)) |>
  select(Component, Percent) |>
  arrange(desc(Percent))
```

**Tests**

**Logistic regression**

```{r}
# Define the list of good predictors
predictors <- c(
  "introduction_resp_age",
  "demographics_educ_level_grouped",
  "demographics_resp_activity",
  "income_social_protection_ukr_govt",
  "diff_lack_of_lang",
  "diff_lack_childcare",
  "diff_lack_of_skills",
  "diff_none",
  "diff_discrimination",
  "diff_lack_of_documentation",
  "diff_lack_opp",
  "diff_lack_recog",
  "diff_loss_benefits",
  "needs_employment",
  "needs_employment",
  "needs_education_support",
  "needs_food",
  "needs_accommodation",
  "benefits_cash_benefits",
  "benefits_unemployment_grant"
)

model_data <- combined_data |>
  select(employed_binary, all_of(predictors)) |>
  drop_na()

model <- glm(employed_binary ~ ., data = model_data, family = binomial)
summary(model)

# model_data$predicted_prob <- predict(model, type = "response")
# model_data$predicted_class <- ifelse(model_data$predicted_prob > 0.5, 1, 0)
# mean(model_data$predicted_class == as.numeric(as.character(model_data$employed_binary)))
# table(Predicted = model_data$predicted_class, Actual = model_data$employed_binary)


# ggplot(model_data, aes(x = predicted_prob, fill = factor(employed_binary))) +
#   geom_histogram(binwidth = 0.05, position = "identity", alpha = 0.6) +
#   labs(fill = "Actual Employment", x = "Predicted Probability", y = "Count") +
#   theme_minimal()

#hoslem.test(model_data$employed_binary, fitted(model), g = 10)
```

**Random forest**

```{r, fig.width=8, fig.height=8}
colnames(combined_data)

important_vars <- c(
  "introduction_resp_age",
  "demographics_educ_level_grouped",
  "demographics_resp_activity",
  "income_social_protection_host_govt",
  "income_remmittances",
  "income_social_protection_ukr_govt",
  "diff_lack_of_lang",
  "diff_lack_childcare",
  "diff_lack_of_skills",
  "diff_lack_of_education_skills",
  "diff_lack_of_info",
  "diff_none",
  "diff_discrimination",
  "diff_lack_of_documentation",
  "needs_education_support",
  "needs_medical",
  "needs_accommodation",
  "needs_host_govt_assistance",
  "benefits_cash_benefits",
  "benefits_unemployment_grant"
)

model_data <- combined_data |>
  select(employed_binary, all_of(important_vars)) |>
  drop_na()

model_data_reduced <- model_data[, c("employed_binary", important_vars)]

rf_reduced <- randomForest(
  factor(employed_binary) ~ .,
  data = model_data_reduced,
  ntree = 500,
  importance = TRUE
)

rf_reduced
importance(rf_reduced)
varImpPlot(rf_reduced)
```

```{r}
set.seed(123)

# Define train control with stratified 5-fold CV
train_control <- trainControl(
  method = "cv",       
  number = 5,        
  classProbs = TRUE,   
  summaryFunction = twoClassSummary, 
  savePredictions = TRUE,
  sampling = "up",  
  verboseIter = TRUE
)

model_data_reduced$employed_binary <- factor(model_data_reduced$employed_binary, levels = c(0,1), labels = c("No", "Yes"))

# Train random forest with caret 
rf_model <- train(
  employed_binary ~ .,
  data = model_data_reduced,
  method = "rf",
  trControl = train_control,
  metric = "ROC",     
  tuneLength = 5         
)

print(rf_model)

rf_model <- randomForest(factor(employed_binary) ~ ., data = model_data_reduced,
                         ntree = 500, mtry = 2, importance = TRUE)

imp <- importance(rf_model)
top_vars <- rownames(imp)[order(imp[, "MeanDecreaseAccuracy"], decreasing = TRUE)][1:15]



model_data_selected <- model_data_reduced[, c("employed_binary", top_vars)]
model_data_selected$employed_binary <- ifelse(model_data_selected$employed_binary == "Yes", 1, 0)
logit_model <- glm(employed_binary ~ ., data = model_data_selected, family = binomial)
summary(logit_model)

pred_probs <- predict(logit_model, type = "response")
pred_class <- ifelse(pred_probs > 0.5, 1, 0)
table(Predicted = pred_class, Actual = model_data_selected$employed_binary)
mean(pred_class == model_data_selected$employed_binary)
roc_obj <- roc(model_data_selected$employed_binary, pred_probs)
plot(roc_obj)
auc(roc_obj)
```

```{r}
# Country specific data
formula_str <- paste("employed_binary ~", paste(top_vars, collapse = " + "))
formula <- as.formula(formula_str)

models_by_country <- combined_data |>
  group_by(country) |>
  group_split() |>
  map(~ glm(formula, data = ., family = binomial))

names(models_by_country) <- unique(combined_data$country)


summary(models_by_country$Estonia)
summary(models_by_country$Poland)
summary(models_by_country$Slovakia)
summary(models_by_country$Romania)
summary(models_by_country$Czechia)
summary(models_by_country$Moldova)

```

```{r, fig.width=8, fig.height=8}
dd <- datadist(model_data_selected)
options(datadist = "dd")

logit_model_rms <- lrm(employed_binary ~ ., data = model_data_selected, x=TRUE, y=TRUE)
cal <- calibrate(logit_model_rms, method="boot", B=1000)

plot(cal, xlab="Predicted Probability", ylab="Observed Probability", main="Calibration Plot")

summary(logit_model_rms)
summary(logit_model)
```


*Discussion*

*Conclusion*

*Citations*

- SocioFactor, IOM, Impact-REACH, SHC, Sociofactor, TARKI Social Research Institute, Ipsos, UNHCR (2023). Poland, Slovak Republic, Hungary, Czech Republic, Moldova, Romania, Bulgaria: Multi-Sector Needs Assessment (MSNA) - 2023. Accessed from: https://microdata.unhcr.org

- UNHCR (2023). Estonia: Multi-Sector Needs Assessment (MSNA) - 2023. Accessed from: https://microdata.unhcr.org
