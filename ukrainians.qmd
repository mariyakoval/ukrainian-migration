---
title: "ukrainians"
format: html
---

```{r setup, include=FALSE}
# set code chunk option defaults
knitr::opts_chunk$set(
  # display code as types
  tidy = FALSE, 
  # slightly smaller code font
  size = "small",
  # do not display messages in PDF
  message = FALSE,
  # set default figure width and height
  fig.width = 5, fig.height = 3) 
```

```{r, include=FALSE}

# Load necessary packages
if (!require('pacman')) install.packages('pacman'); library('pacman')
pacman::p_load(viridis, tidyverse, ggplot2, lubridate, knitr, dplyr, ggpubr, 
              janitor, tidyr, kableExtra, ggcorrplot, ggthemes, zoo,
              gridExtra, grid, Hmisc, FSA, dunn.test, readxl, RColorBrewer)
# Load data
data_ee <- readRDS("Data/data_ee")
work_df <- readRDS("Data/work_df")
income_sources_df <- readRDS("Data/income_sources_df")
med_issues_df <- readRDS("Data/med_issues_df")
reasons_country_ee <- readRDS("Data/reasons_country_ee")
```

**Introduction**

**Data and methods**

**Ukrainian Refugees in Estonia**
**EDA**

**Demographics**

```{r, fig.width=8, fig.height=10, warning=FALSE}
# Common theme for plots
gg <- theme_minimal() +
  theme(
    legend.position = "none",
    plot.title = element_text(size = 10, face = "bold"),
    axis.title = element_text(size = 8),
    axis.text = element_text(size = 7)
  )

# EDA plots
e1 <- ggplot(data_ee, aes(x = introduction_resp_age, fill = introduction_resp_age)) +
  geom_bar(stat = "count") + gg + xlab("Age") + ylab("Count") +
  scale_fill_brewer(palette = "Paired")

e2 <- ggplot(data_ee, aes(x = introduction_date_departure, fill = as.factor(introduction_date_departure))) +
  geom_bar(stat = "count") +
  scale_fill_brewer(palette = "Paired") +
  xlab("Date of departure") +
  ylab("Count") +
  xlim(as.Date("2022-01-01"), as.Date("2023-01-01")) + gg

e3 <- ggplot(data_ee, aes(x = introduction_date_arrival, fill = as.factor(introduction_date_arrival ))) +
  geom_bar(stat = "count") +
  scale_fill_brewer(palette = "Paired") +
  xlab("Date of departure") +
  ylab("Count")+
  xlim(as.Date("2022-01-01"), as.Date("2023-01-01")) +gg

e4 <- ggplot(data_ee, aes(x = demographics_educ_level , fill = demographics_educ_level  )) +
  geom_bar(stat = "count") + gg + xlab("Education") + ylab("Count") +
  scale_fill_brewer(palette = "Paired")

e5 <- ggplot(data_ee, aes(x = demographics_resp_activity, fill = demographics_resp_activity)) +
  geom_bar(stat = "count") + gg + 
  xlab("Activity status") + ylab("Count") +
  scale_fill_brewer(palette = "Paired")

e6 <- ggplot(data_ee, aes(x = Family_Separation_separation_y_n, fill = Family_Separation_separation_y_n)) +
  geom_bar(stat = "count") + gg +
  xlab("Family Separation (Yes/No)") + ylab("Count") +
  scale_fill_brewer(palette = "Paired")

e7 <- ggplot(reasons_country_ee, aes(x = reorder(Component, Total_Proportion), y = Total_Proportion, fill = Total_Proportion)) +
  geom_bar(stat = "identity") + gg +
  xlab("What motivated you to come to this country?") + ylab("Count") +
  scale_fill_gradient(low = "lightblue", high = "darkblue")


# Arrange all plots
grid.arrange(grobs = list(e1, e2, e3, e4, e5, e6, e7),
             ncol = 2, nrow = 5,
             top = "Bar Plots of Key Demographic Variables in Estonia Dataset")
```

```{r}
#Legal Status proportions
freq_table <- table(data_ee$documentation_legal_status, useNA = "ifany")
prop_table <- prop.table(freq_table)
percent_table <- round(100 * prop_table, 2)

#Difficulty in getting temp protection
freq_table_legal_diff <- table(data_ee$documentation_temp_protection_difficulty, useNA = "ifany")
prop_table_legal_diff <- prop.table(freq_table_legal_diff)
percent_table_legal_diff <- round(100 * prop_table_legal_diff, 2)

# Types of difficulties 
freq_table_legal_diff <- table(data_ee$documentation_temp_protection_difficulty_what, useNA = "ifany")
prop_table_legal_diff <- prop.table(freq_table_legal_diff)
percent_table_legal_diff <- round(100 * prop_table_legal_diff, 2)

# Function to create a clean proportion table
make_prop_table <- function(variable) {
  tibble(
    Category = names(table(variable, useNA = "ifany")),
    Count = as.numeric(table(variable, useNA = "ifany")),
    Percent = round(100 * (prop.table(table(variable, useNA = "ifany"))), 2)
  )
}

# Apply to each variable
legal_status_table <- make_prop_table(data_ee$documentation_legal_status)
legal_diff_table <- make_prop_table(data_ee$documentation_temp_protection_difficulty)
legal_diff_what_table <- make_prop_table(data_ee$documentation_temp_protection_difficulty_what)

# View tables
legal_status_table
legal_diff_table
legal_diff_what_table

```
**Accommodation**

```{r}

# Function to create a clean proportion table
make_prop_table <- function(variable) {
  tibble(
    Category = names(table(variable, useNA = "ifany")),
    Count = as.numeric(table(variable, useNA = "ifany")),
    Percent = round(100 * (prop.table(table(variable, useNA = "ifany"))), 2)
  )
}

housing_issues_summary <- housing_issues_df |>
  rename(Percent = Total_Proportion) |>
  arrange(desc(Percent))
leave_accomm_reason <- make_prop_table(data_ee$host_country_accomm_reason)

# View tables
housing_issues_summary
leave_accomm_reason

```
**Services**

+ School

```{r}

data_ee_filtered <- data_ee |>
  filter(!is.na(host_country_childcare_services))

# Create the bar chart
ggplot(data_ee_filtered, aes(x = host_country_childcare_services, fill = host_country_childcare_services)) +
  geom_bar(stat = "count") +
  xlab("Childcare Services") +
  ylab("Count") +
  scale_fill_brewer(palette = "Paired") + gg

ggplot(data_ee_filtered, aes(x = host_country_healthcare_access, fill = host_country_healthcare_access)) +
  geom_bar(stat = "count") +
  xlab("Problems accessing Healthcare Services") +
  ylab("Count") +
  scale_fill_brewer(palette = "Paired") + gg

med_issues_summary <- med_issues_df |>
  mutate(Percent = round(Proportion * 100, 2)) |>
  select(Percent) |>
  arrange(desc(Percent))

med_issues_summary

```

**Income**

```{r}
income_summary <- income_sources_df |>
  mutate(Percent = round(Proportion * 100, 2)) |>
  select(Percent) |>
  arrange(desc(Percent))
income_summary


work_summary <- make_prop_table(data_ee$host_country_work_coa)
work_summary

work_issues_summary <- work_df |>
  mutate(Percent = round(Proportion * 100, 2)) |>
  select(Percent) |>
  arrange(desc(Percent))
work_issues_summary

ggplot(data_ee, aes(x = economic_capicity_L13_SS_AFF_GOODS, fill = economic_capicity_L13_SS_AFF_GOODS)) +
  geom_bar(stat = "count") + gg + xlab("Can ypu afford more or less goods?") + ylab("Count") +
  scale_fill_brewer(palette = "Paired")
```
ECONOMIC_CAPICITY_L13_1_SM_MORE_GOODS
ECONOMIC_CAPICITY_L13_1_SM_LESS_GOODS

**Safety**
SOCIAL_COHESION_SC3_SS_EXP_HOSTILE
SOCIAL_COHESION_SC4_SM_HOSTILE_TYP

**Aid**
AAP_AAP_0_SS_SATISFIED_AID
URGENT_NEEDS_URGENT_NEEDS_FIRST
URGENT_NEEDS_URGENT_NEEDS_SECOND
URGENT_NEEDS_URGENT_NEEDS_THIRD
INFO_NEEDS_INFO_RECEIVE

**Travelign back**
TRAVEL_UKRAINE_TEMP_RETURN
TRAVEL_UKRAINE_TEMP_RETURN_REASON
Reasons of going permanently to Ukraine
TRAVEL_UKRAINE_NO_RETURN_PLANS
TRAVEL_UKRAINE_NO_RETURN_MOVE_COUNTRY
TRAVEL_UKRAINE_NO_RETURN_MOVE_REASONS

**Discussion**

**Conclusion**