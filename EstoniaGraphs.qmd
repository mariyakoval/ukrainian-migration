---
title: "EstoniaGraphs"
format: html
---

```{r, include=FALSE, warning=FALSE}

# Load necessary packages
if (!require('pacman')) install.packages('pacman'); library('pacman')
pacman::p_load(viridis, tidyverse, ggplot2, lubridate, knitr, dplyr, ggpubr, 
               janitor, tidyr, kableExtra, ggcorrplot, ggthemes, zoo, forcats,
               gridExtra, grid, Hmisc, FSA, dunn.test, readxl, RColorBrewer,
               patchwork, cowplot, pROC, rms)
# Load data
data_ee <- readRDS("Data/data_ee")
combined_df <- readRDS("Data/combined_df")
reasons_country_ee <- readRDS("Data/reasons_country_ee")
combined_data <- readRDS("Data/combined_data")
```

**Estonia graphs for popular article**

# Table with proportions of activity in Ukraine and Estonia
  
```{r}
# Filter & recode activities in Estonia
act_host_data <- combined_data |>
  filter(
    country == "Estonia",
    !is.na(host_country_work_coa)
  ) 

# Count and calculate percentage
act_host_summary <- act_host_data |>
  count(host_country_work_coa, name = "n_host") |>
  mutate(percent_host = round(n_host / sum(n_host) * 100, 1))


# Filter & recode activities in Ukraine
act_ukr_data <- combined_data |>
  filter(
    country == "Estonia",
    !is.na(demographics_resp_activity),
    demographics_resp_activity != "No Answer"
  ) 

# Count and calculate percentage
act_ukr_summary <- act_ukr_data |>
  count(demographics_resp_activity, name = "n_ukr") |>
  mutate(percent_ukr = round(n_ukr / sum(n_ukr) * 100, 1))


# Merge summaries for comparison
activity_comparison <- full_join(
  act_ukr_summary,
  act_host_summary,
  by = c("demographics_resp_activity" = "host_country_work_coa")
)

activity_comparison
```

# Социально-экономические потребности украинцев

```{r, fig.height = 4, fig.width=7, echo=FALSE}
combined_df |>
  filter(!Country %in% c("Hungary", "Bulgaria", "construct", NA)) |>
  filter(Source == "needs", Country == "Estonia") |>
  mutate(Component = fct_recode(Component,
                                "Жилье" = "Accommodation",
                                "Обучение" = "Education",
                                "Трудоустройство" = "Employment",
                                "Медицина" = "Healthcare",
                                "Никаких" = "None",
  )) |>
  mutate(Percent = round(Total_Proportion * 100, 2)) |>
  select(Component, Percent, Country) |>
  group_by(Country) |>
  arrange(desc(Percent), .by_group = TRUE) |>
  slice_head(n = 5) |>
  ungroup() |>
  ggplot(aes(x = reorder(Component, Percent), 
             y = Percent, fill = Component)) +
  geom_col(show.legend = TRUE) +
  geom_text(aes(label = paste0(Percent, "%")), 
            hjust = -0.1, size = 3) +
  coord_flip() +
  xlab("Нужды") + ylab("Проценты") +
  ggtitle("Социально-экономические потребности украинцев") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        legend.position = "none"
  ) +
  guides(fill = guide_legend(title = "Type")) +
  scale_fill_brewer(palette = "Dark2") +
  scale_y_continuous(expand = expansion(mult = c(0, 0.15)))
```

# Рабочая активность украинцев до и после переезда в Эстонию (2023)

```{r, fig.height = 4, fig.width=6.7, echo=FALSE}

act_host <- combined_data |>
  filter(
    !is.na(host_country_work_coa),
    country == "Estonia"
  ) |>
  mutate(host_country_work_coa = factor(host_country_work_coa))|>
  mutate(host_country_work_coa = fct_recode(
    host_country_work_coa,
    "Работал(-а)" = "Employed",
    "Учился(-ась)" = "Studying",
    "Занимался(-ась) домом" = "Housekeeping",
    "Стажер" = "Trainee",
    "Вышел(-ла) на пенсию" = "Retired",
    "Нетрудоустроенный(-ая)" = "Unemployed",
    "Болезнь или травма" = "Long term illness/injury",
    "Другое" = "Other"
  ))|>
  count(country, host_country_work_coa) |>
  mutate(percent = n / sum(n) * 100) |>
  ggplot(aes(x = country, y = percent, fill = host_country_work_coa)) +
  geom_bar(stat = "identity") +
  theme_minimal() +
  theme(axis.text.x = element_blank(), axis.title.x = element_blank()) +
  guides(fill = guide_legend(title = "Тип деятельности")) +
  scale_fill_brewer(palette = "Dark2") +
  theme(legend.position = "none") +
  ylab(element_blank()) +
  ggtitle( " ",
           subtitle = "Занятость в Эстонии"
  )

act_ukr <- combined_data |>
  filter(
    country == "Estonia"
  ) |>
  mutate(demographics_resp_activity = fct_recode(
    demographics_resp_activity,
    "Работал(-а)" = "Employed",
    "Учился(-ась)" = "Studying",
    "Занимался(-ась) домом" = "Housekeeping",
    "Стажер" = "Trainee",
    "Вышел(-ла) на пенсию" = "Retired",
    "Нетрудоустроенный(-ая)" = "Unemployed",
    "Болезнь или травма" = "Long term illness/injury",
    "Другое" = "Other"
  ))|>
  filter(!is.na(demographics_resp_activity), demographics_resp_activity != "No Answer") |>
  count(country, demographics_resp_activity) |>
  mutate(percent = n / sum(n) * 100) |>
  ggplot(aes(x = country, y = percent, fill = demographics_resp_activity)) +
  geom_bar(stat = "identity") +
  ylab("Проценты") +
  theme_minimal() +
  theme(axis.text.x = element_blank(), axis.title.x = element_blank()) +
  guides(fill = guide_legend(title = "Activity Type")) +
  scale_fill_brewer(palette = "Dark2") +
  theme(legend.position = "none" )+
  ggtitle(
    "Рабочая активность украинцев до и после переезда в Эстонию (2023)",
    subtitle = "Занятость в Украине"
  )

# Shared legend
shared_legend <- get_legend(
  act_host + theme(legend.position = "right")
)

# Combined plot
combined_plot <- plot_grid(
  act_ukr, act_host,
  labels = NULL,
  ncol = 2,
  align = "hv"
)

plot_grid(
  combined_plot, shared_legend,
  ncol = 2,
  rel_widths = c(0.19, 0.1)
)

```
# Уровень образования по возрастным группам украинцев в Эстонии (2023)

```{r, fig.width=7, fig.height=5, warning=FALSE, echo=FALSE}

combined_data |>
  filter(
    country == "Estonia",
    !is.na(demographics_educ_level),
    !is.na(introduction_resp_age)
  ) |>
  mutate(demographics_educ_level = case_when(
    grepl("tech", demographics_educ_level, ignore.case = TRUE) ~ "Техническое",
    grepl("sec", demographics_educ_level, ignore.case = TRUE) ~ "Среднее",
    grepl("pri", demographics_educ_level, ignore.case = TRUE) ~ "Начальное",
    grepl("phd", demographics_educ_level, ignore.case = TRUE) ~ "Докторантура",
    grepl("master", demographics_educ_level, ignore.case = TRUE) ~ "Магистратура",
    grepl("bachelor", demographics_educ_level, ignore.case = TRUE) ~ "Бакалавриат",
    grepl("no_edu", demographics_educ_level, ignore.case = TRUE) ~ "Без образования",
    grepl("prefer", demographics_educ_level, ignore.case = TRUE) ~ "Без ответа",
    grepl("spec", demographics_educ_level, ignore.case = TRUE) ~ "Специализация",
    TRUE ~ demographics_educ_level
  )) |>
  filter(demographics_educ_level != "Без ответа") |>
  count(introduction_resp_age, demographics_educ_level) |>
  group_by(introduction_resp_age) |>
  mutate(prop = n / sum(n) * 100) |>
  ungroup() |>
  mutate(demographics_educ_level = fct_reorder(demographics_educ_level, n, .fun = sum, .desc = TRUE)) |>
  ggplot(aes(x = introduction_resp_age, y = prop, fill = demographics_educ_level)) +
  geom_col(position = "stack") +
  xlab("Возраст") +
  ylab("Проценты") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  guides(fill = guide_legend(title = "Уровень образования")) +
  scale_fill_brewer(palette = "Dark2") +
  ggtitle("Уровень образования по возрастным группам украинцев в Эстонии (2023)")


```

# Основные препятствия для трудоустройства украинцев

```{r, fig.height = 4, fig.width=7, echo=FALSE}

#Aggregated data

combined_df |>
  filter(Country == "Estonia", Source == "job") |>
  mutate(Component = fct_recode(Component,
                                "Языковой барьер" = "Language barrier",
                                "Нет препятствий" = "None",
                                "Недостаток возможностей" = "Insuffisient opportunities",
                                "Непризнание квалификаций" = "Lack of recognition",
                                "Другое" = "other",
                                "Не планирую оставаться" = "not_staying",
                                "Уход за другими" = "Care for others",
                                "Нет разрешения на работу" = "lack_permit",
                                "Дискриминация" = "discrim",
                                "Потеря пособий" = "loss_benefits",
                                "Предпочитаю не отвечать" = "prefer_no_answer",
                                "Нет адреса" = "lack_address",
                                "Нет информации" = "lack_info",
                                "Нет документов" = "lack_docum"
  )) |>
  mutate(Percent = round(Total_Proportion * 100, 2)) |>
  select(Component, Percent, Country) |>
  group_by(Country) |>
  arrange(desc(Percent), .by_group = TRUE) |>
  slice_head(n = 5) |>
  ungroup() |> 
  ggplot(aes(x = reorder(Component, Percent), 
             y = Percent, fill = Component)) +
  geom_col(show.legend = TRUE) +
  geom_text(aes(label = paste0(Percent, "%")), 
            hjust = -0.1, size = 3) +
  xlab("Причина") + 
  ylab("Проценты") +
  ggtitle("Основные препятствия для трудоустройства украинцев") +
  theme_minimal() +
  coord_flip() +
  theme(axis.text.x = element_text(angle = 35,  hjust = 1, size = 6),
        legend.position = "none") +
  scale_fill_brewer(palette = "Dark2")+
  scale_y_continuous(expand = expansion(mult = c(0, 0.15)))

```

# Основные проявления дискриминации и социальной изоляции

```{r, fig.height = 4, fig.width=7, echo=FALSE}

#Aggregated data

combined_df |>
  filter(Country == "Estonia", Source == "cohesion") |>
  mutate(Component = fct_recode(Component,
                                "Вербальная агрессия" = "verbal_aggression",
                                "Никаких" = "none",
                                "Негатив в соцсетях" = "comments_social_media",
                                "Дискриминация" = "discriminatory_behavior",
                                "Другое" = "other"
  )) |>
  mutate(Percent = round(Total_Proportion * 100, 2)) |>
  select(Component, Percent, Country) |>
  group_by(Country) |>
  arrange(desc(Percent), .by_group = TRUE) |>
  slice_head(n = 5) |>
  ungroup() |> 
  ggplot(aes(x = reorder(Component, Percent), 
             y = Percent, fill = Component)) +
  geom_col(show.legend = TRUE) +
  geom_text(aes(label = paste0(Percent, "%")), 
            hjust = -0.1, size = 3) +
  xlab("Тип препятствия") + 
  ylab("Проценты") +
  ggtitle("Основные проявления дискриминации и социальной изоляции") +
  theme_minimal() +
  coord_flip() +
  theme(axis.text.x = element_text(angle = 35,  hjust = 1, size = 6),
        legend.position = "none") +
  scale_fill_brewer(palette = "Dark2")+
  scale_y_continuous(expand = expansion(mult = c(0, 0.15)))

```

# Источники дохода украинцев в Эстонии

```{r, fig.height = 4, fig.width=7, echo=FALSE}

#Aggregated data

combined_df |>
  filter(Source == "income", Country == "Estonia") |>
  mutate(Component = fct_recode(Component,
                                "Работа" = "Job",
                                "Социальная защита" = "Social Protection",
                                "Нет дохода" = "No income",
                                "Другие источники" = "Other Sources",
                                "Социальная защита в Украине" = "Social Protection from Ukraine"
  )) |>
  mutate(Percent = round(Total_Proportion * 100, 2))|>
  select(Component, Percent, Country) |>
  group_by(Country) |>
  arrange(desc(Percent), .by_group = TRUE) |>
  slice_head(n = 5) |>
  ungroup() |> 
  ggplot(aes(x = reorder(Component, Percent), 
             y = Percent, fill = Component)) +
  geom_col(show.legend = TRUE) +
  geom_text(aes(label = paste0(Percent, "%")), 
            hjust = -0.1, size = 3) +
  xlab("Источник дохода") + ylab("Проценты") +
  ggtitle("Источники дохода украинцев в Эстонии") +
  theme_minimal() +
  coord_flip() +
  theme(axis.text.x = element_text(angle = 35,  hjust = 1, size = 6),
        legend.position = "none") +
  scale_fill_brewer(palette = "Dark2")+
  scale_y_continuous(expand = expansion(mult = c(0, 0.15)))

```
# Способность приобретать товары по сравнению с довоенным временем

```{r}

# Function to create a clean proportion table
make_prop_table <- function(variable, na.rm = FALSE) {
  if (na.rm) {
    variable <- variable[!is.na(variable)]
  }
  
  tab <- table(variable)
  
  tibble::tibble(
    Category = names(tab),
    Count = as.numeric(tab),
    Percent = round(100 * prop.table(tab), 2)
  )
}

rus_labels <- c(
  "dont_know" = "Затрудняюсь ответить",
  "fewer" = "Меньше, чем до войны",
  "more" = "Больше, чем до войны",
  "prefer_not_to_answer" = "Предпочитаю не отвечать",
  "same" = "Примерно столько же"
)

# Generate and format table
make_prop_table(data_ee$economic_capicity_L13_SS_AFF_GOODS, na.rm = TRUE) |>
  mutate(Category = rus_labels[Category]) |>
  kable(booktabs = TRUE, align = "c",
        col.names = c("Ответ", "Количество", "Процент"))|>
  kable_styling(latex_options = c("striped"), font_size = 12) |>
  column_spec(1, bold = TRUE) |>
  row_spec(0, bold = TRUE, color = "white", background = "gray") |>
  add_header_above(c("Способность приобретать товары по сравнению с довоенным временем" = 3))

make_prop_table(data_ee$economic_capicity_L13_1_SM_MORE_GOODS)
make_prop_table(data_ee$economic_capicity_L13_1_SM_LESS_GOODS)
```

# Удовлетноренность медицинским сервисом

```{r}
ggplot(data_ee, aes(x = host_country_healthcare_access, 
                    fill = host_country_healthcare_access)) +
  geom_bar(stat = "count") +
  xlab("Problems accessing Healthcare Services") +
  ylab("Count") +
  scale_fill_brewer(palette = "Paired") 

combined_df |>
  filter(Source == "med_issues") |>
  mutate(Percent = round(Total_Proportion * 100, 2)) |>
  select(Component, Percent) |>
  arrange(desc(Percent))

```
