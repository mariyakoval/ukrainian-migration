---
title: "data-wrangling"
format: html
---

```{r, include=FALSE, warning=FALSE}

# Load necessary packages
if (!require('pacman')) install.packages('pacman'); library('pacman')
pacman::p_load(viridis, tidyverse, ggplot2, lubridate, knitr, dplyr, ggpubr, 
              janitor, tidyr, kableExtra, ggcorrplot, ggthemes, zoo, purr,
              gridExtra, grid, Hmisc, FSA, dunn.test, readxl, RColorBrewer)
# Load data
data_ee <- read.csv("Data/UNHCR_EST_2023_MSNA_hh_data_v1.csv")
data_eu <- read_csv("Data/EU_countries.csv")
data_eu_ind <- read_csv("Data/EU_Ind.csv")
```

```{r}
data_eu <- data_eu |>
  filter(!is.na(country) & country != 0 & 
           !(country %in% c("Bulgaria", "Hungary", "construct")))

```


```{r}

data_ee <- data_ee |>
  select(introduction_resp_age, demographics_educ_level,
         demographics_resp_activity, host_country_SE2_11_SS_INC_SOR,
         host_country_diff_work, host_country_work_coa,
         urgent_needs_urgent_needs_first, host_country_SE2_11b_SM_BEN_HST)

data_eu <- data_eu |>
  select(DR7_3_NUM_RESP_AGE, SE2_11_SS_INC_SOR, 
         SE2_14_SM_SOC_AST_TYP, SE2_11b_SM_BEN_HST, country) |>
  rename(introduction_resp_age = DR7_3_NUM_RESP_AGE,
         income_source = SE2_11_SS_INC_SOR,
         socioecon_needs = SE2_14_SM_SOC_AST_TYP,
         socbenefits = SE2_11b_SM_BEN_HST)

data_eu_ind <- data_eu_ind |>
  select(SE1_SS_EDU_LVL, SE2_SS_WORK, SE12_SM_EMP_BARR, SE8_SS_ACTIVITY,
         SE13_SS_WRK_TYP, country) |>
  rename(demographics_educ_level = SE1_SS_EDU_LVL,
         host_country_diff_work = SE12_SM_EMP_BARR,
         demographics_resp_activity = SE13_SS_WRK_TYP)
 
data_eu_ind <- data_eu_ind |>
  mutate(SE8_SS_ACTIVITY = case_when(
    SE2_SS_WORK == "yes" ~ "employed",
    TRUE ~ SE8_SS_ACTIVITY)) |>
    filter(!if_all(c(
      "demographics_educ_level",
      "SE2_SS_WORK",
      "host_country_diff_work",
      "SE8_SS_ACTIVITY",
      "demographics_resp_activity"
    ), is.na)) |>
  rename(host_country_work_coa = SE8_SS_ACTIVITY)

colnames(data_eu_ind)
colnames(data_eu)
colnames(data_ee)
```

```{r}
data_ee <- data_ee |> 
 rename(income_source = host_country_SE2_11_SS_INC_SOR,
        socioecon_needs = urgent_needs_urgent_needs_first,
        socbenefits = host_country_SE2_11b_SM_BEN_HST)|> 
              mutate(country = "Estonia")

common_cols <- c(
  "demographics_educ_level",
  "demographics_resp_activity",
  "host_country_diff_work",
  "country",
  "host_country_work_coa"
)

combined_ind <- bind_rows(
  select(data_eu_ind, all_of(common_cols)),
  select(data_ee, all_of(common_cols)))|>
    filter(!if_all(c(
       "demographics_educ_level",
       "demographics_resp_activity",
       "host_country_diff_work",
        "host_country_work_coa"), is.na))|> 
    mutate(host_country_work_coa = case_when(
    tolower(host_country_work_coa) %in% c("employed_here", "employed_remote", "self_employed", "employed") ~ "Employed",
    tolower(host_country_work_coa) %in% c("status_unempl", "unemployed") ~ "Unemployed",
    grepl("house", host_country_work_coa, ignore.case = TRUE) ~ "Housekeeping",
    grepl("hh_resp", host_country_work_coa, ignore.case = TRUE) ~ "Housekeeping",
    grepl("ill", host_country_work_coa, ignore.case = TRUE) ~ "Long term illness/injury",
    grepl("stud", host_country_work_coa, ignore.case = TRUE) ~ "Studying",
    grepl("train", host_country_work_coa, ignore.case = TRUE) ~ "Trainee",
    grepl("intern", host_country_work_coa, ignore.case = TRUE) ~ "Trainee",
    grepl("volunt", host_country_work_coa, ignore.case = TRUE) ~ "Other",
    grepl("other", host_country_work_coa, ignore.case = TRUE) ~ "Other",
    grepl("prefer", host_country_work_coa, ignore.case = TRUE) ~ "Other",
    grepl("retired", host_country_work_coa, ignore.case = TRUE) ~ "Retired",
    TRUE ~ host_country_work_coa )) |>
    mutate(demographics_resp_activity = case_when(
    tolower(demographics_resp_activity) %in% c("employee", "self_employed", "employed", "family_business") ~ "Employed",
    tolower(demographics_resp_activity) %in% c("unemployed") ~ "Unemployed",
    grepl("other", demographics_resp_activity, ignore.case = TRUE) ~ "Other",
    grepl("prefer_no_answer", demographics_resp_activity, ignore.case = TRUE) ~ "Other",
    grepl("unpaid", demographics_resp_activity, ignore.case = TRUE) ~ "Other",
    grepl("retired", demographics_resp_activity, ignore.case = TRUE) ~ "Retired",
    grepl("engaged_in_HH_resp", demographics_resp_activity, ignore.case = TRUE) ~ "Housekeeping",
    grepl("housekeeping", demographics_resp_activity, ignore.case = TRUE) ~ "Housekeeping",
    grepl("stud", demographics_resp_activity, ignore.case = TRUE) ~ "Studying",
    grepl("train", demographics_resp_activity, ignore.case = TRUE) ~ "Trainee",
    grepl("ill", demographics_resp_activity, ignore.case = TRUE) ~ "Long term illness/injury",
    TRUE ~ demographics_resp_activity )) 

unique(combined_ind$demographics_resp_activity)

common_cols1 <- c(
  "introduction_resp_age",
  "income_source",
  "socioecon_needs",
  "socbenefits",
  "country"
)

combined_hh <- bind_rows(
  select(data_eu, all_of(common_cols1)),
  select(data_ee, all_of(common_cols1)))
```

```{r}
split_category_proportions_by_country <- function(data, category_col, country_col) {
  data[[category_col]] <- as.character(data[[category_col]])
  data[[country_col]] <- as.character(data[[country_col]])
  data <- data[!is.na(data[[category_col]]) & data[[category_col]] != "" & 
                 !is.na(data[[country_col]]) & data[[country_col]] != "", ]
  
  result_list <- list()
  for (cntry in unique(data[[country_col]])) {
    subset_data <- data[data[[country_col]] == cntry, ]
    cat_table <- prop.table(table(subset_data[[category_col]]))
    
    component_list <- list()
    for (name in names(cat_table)) {
      components <- unlist(strsplit(name, " "))
      prop_per_component <- cat_table[[name]] / length(components)
      
      for (comp in components) {
        if (!is.null(component_list[[comp]])) {
          component_list[[comp]] <- component_list[[comp]] + prop_per_component
        } else {
          component_list[[comp]] <- prop_per_component
        }
      }
    }
    
    temp_df <- data.frame(
      Component = names(component_list),
      Total_Proportion = unlist(component_list),
      Country = cntry
    )
    result_list[[cntry]] <- temp_df
  }
  final_df <- do.call(rbind, result_list)
  rownames(final_df) <- NULL
  
  return(final_df[order(final_df$Country, -final_df$Total_Proportion), ])
}

income_df <- split_category_proportions_by_country(
  data = combined_hh,
  category_col = "income_source",
  country_col = "country"
)

jobs_df <- split_category_proportions_by_country(
  data = combined_ind,
  category_col = "host_country_diff_work",
  country_col = "country"
)

needs_df <- split_category_proportions_by_country(
  data = combined_hh,
  category_col = "socioecon_needs",
  country_col = "country"
)

benefits_df <- split_category_proportions_by_country(
  data = combined_hh,
  category_col = "socbenefits",
  country_col = "country"
)
```

```{r}

add_source_label <- function(df, source_name) {
  df <- df[, c("Country", "Component", "Total_Proportion")] 
  df$Source <- source_name
  return(df)
}

df_list <- list(
  income = income_df,
  job = jobs_df,
  needs = needs_df,
  benefits = benefits_df
)

combined_df <- imap_dfr(df_list, ~ add_source_label(.x, .y))
saveRDS(combined_df, "Data/combined_df")
```

```{r}
saveRDS(combined_ind, "Data/combined_ind")
saveRDS(combined_hh, "Data/combined_hh")
```