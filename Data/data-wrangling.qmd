---
title: "data-wrangling"
format: html
---

```{r, include=FALSE}

# Load necessary packages
if (!require('pacman')) install.packages('pacman'); library('pacman')
pacman::p_load(viridis, tidyverse, ggplot2, lubridate, knitr, dplyr, ggpubr, 
              janitor, tidyr, kableExtra, ggcorrplot, ggthemes, zoo, purr,
              gridExtra, grid, Hmisc, FSA, dunn.test, readxl, RColorBrewer)
# Load data
data_ee <- read.csv("UNHCR_EST_2023_MSNA_hh_data_v1.csv")
```

```{r}
#Convert the year to the date format
data_ee$introduction_date_departure <- as.Date(
  as.yearmon(data_ee$introduction_date_departure, format = "%Y-%m")) 
data_ee$introduction_date_arrival <- as.Date(
  as.yearmon(data_ee$introduction_date_arrival , format = "%Y-%m")) 

data_ee <- data_ee |>
  select(introduction_resp_age, introduction_date_arrival, demographics_educ_level,
         demographics_resp_activity, Family_Separation_separation_y_n, 
         documentation_legal_status, documentation_temp_protection_difficulty,
         documentation_temp_protection_difficulty_what, host_country_accomm_reason,
         host_country_childcare_services, host_country_healthcare_access, 
         host_country_work_coa, economic_capicity_L13_SS_AFF_GOODS, 
         economic_capicity_L13_1_SM_MORE_GOODS,
         economic_capicity_L13_1_SM_LESS_GOODS,
         social_cohesion_SC3_SS_EXP_HOSTILE,
social_cohesion_SC4_SM_HOSTILE_TYP,
aap_AAP_0_SS_SATISFIED_AID,
urgent_needs_urgent_needs_first,
urgent_needs_urgent_needs_second,
urgent_needs_urgent_needs_third,
info_needs_info_receive,
Travel_Ukraine_temp_return,
Travel_Ukraine_temp_return_reason,
Travel_Ukraine_no_return_plans, 
Travel_Ukraine_no_return_move_country,
Travel_Ukraine_no_return_move_reasons,
host_country_reasons_coa,
SHL07_SM_LIV_COND,
host_country_healthcare_difficulties,
host_country_SE2_11_SS_INC_SOR,
host_country_diff_work,
Travel_Ukraine_return_length,
Travel_Ukraine_return_reasons
         )
```

```{r}

#function to split combined categories of choices by proportion
split_category_proportions <- function(category_props) {

  component_list <- list()
  for (name in names(category_props)) {
    components <- unlist(strsplit(name, " "))
    prop_per_component <- category_props[[name]] / length(components)
    
    for (comp in components) {
      if (!is.null(component_list[[comp]])) {
        component_list[[comp]] <- component_list[[comp]] + prop_per_component
      } else {
        component_list[[comp]] <- prop_per_component
      }
    }
  }
  
  # Convert to a sorted data frame
  result_df <- data.frame(
    Component = names(component_list),
    Total_Proportion = unlist(component_list)
  )
  
  result_df <- result_df[order(-result_df$Total_Proportion), ]
  
  return(result_df)
}

```

```{r}

# Choosing the country proportions 
freq_table_legal_diff <- table(data_ee$host_country_reasons_coa, useNA = "ifany")
prop_table_legal_diff <- prop.table(freq_table_legal_diff)
print(prop_table_legal_diff)

# Create a vector with proportions of reasons that explain reasons for arrival
# host_country_reasons_coa variable
category_props <- c(
  "accomm_opp relatives" = 0.001798561,
  "accomm_opp temp_prot" = 0.001798561,
  "accomm_opp work_opp" = 0.001798561,
  "close_to_home" = 0.005395683,
  "close_to_home other" = 0.001798561,
  "close_to_home relatives work_opp" = 0.001798561,
  "closest" = 0.071942446,
  "closest close_to_home" = 0.005395683,
  "closest close_to_home language" = 0.001798561,
  "closest cultural language" = 0.001798561,
  "closest language" = 0.010791367,
  "closest language temp_prot" = 0.001798561,
  "closest language work_opp" = 0.003597122,
  "closest other" = 0.003597122,
  "closest relatives" = 0.023381295,
  "closest relatives benefits" = 0.001798561,
  "closest relatives language" = 0.001798561,
  "closest relatives temp_prot" = 0.005395683,
  "closest temp_prot" = 0.003597122,
  "closest work_opp" = 0.001798561,
  "cultural" = 0.005395683,
  "cultural benefits" = 0.001798561,
  "cultural benefits temp_prot" = 0.003597122,
  "cultural edu_opp" = 0.001798561,
  "cultural language" = 0.026978417,
  "cultural language edu_opp" = 0.001798561,
  "cultural language work_opp" = 0.003597122,
  "cultural relatives" = 0.001798561,
  "cultural relatives work_opp" = 0.001798561,
  "cultural temp_prot" = 0.001798561,
  "cultural work_opp" = 0.003597122,
  "cultural work_opp benefits" = 0.001798561,
  "cultural work_opp language" = 0.001798561,
  "edu_opp" = 0.026978417,
  "edu_opp cultural" = 0.005395683,
  "edu_opp cultural work_opp" = 0.001798561,
  "edu_opp relatives" = 0.001798561,
  "health_needs" = 0.003597122,
  "language" = 0.023381295,
  "language benefits" = 0.001798561,
  "language benefits temp_prot" = 0.001798561,
  "language closest" = 0.003597122,
  "language closest close_to_home" = 0.001798561,
  "language cultural" = 0.005395683,
  "language cultural temp_prot" = 0.001798561,
  "language relatives" = 0.003597122,
  "language temp_prot" = 0.001798561,
  "language temp_prot benefits" = 0.003597122,
  "language work_opp" = 0.003597122,
  "language work_opp benefits" = 0.001798561,
  "language work_opp close_to_home" = 0.001798561,
  "language work_opp temp_prot" = 0.001798561,
  "other" = 0.066546763,
  "prefer_no_answer" = 0.003597122,
  "relatives" = 0.435251799,
  "relatives accomm_opp" = 0.001798561,
  "relatives accomm_opp temp_prot" = 0.001798561,
  "relatives accomm_opp work_opp" = 0.003597122,
  "relatives benefits" = 0.005395683,
  "relatives benefits temp_prot" = 0.003597122,
  "relatives closest" = 0.012589928,
  "relatives cultural benefits" = 0.003597122,
  "relatives cultural language" = 0.008992806,
  "relatives cultural work_opp" = 0.001798561,
  "relatives edu_opp" = 0.001798561,
  "relatives language" = 0.017985612,
  "relatives language benefits" = 0.003597122,
  "relatives language cultural" = 0.005395683,
  "relatives language temp_prot" = 0.005395683,
  "relatives other" = 0.017985612,
  "relatives temp_prot" = 0.007194245,
  "relatives work_opp" = 0.026978417,
  "relatives work_opp benefits" = 0.001798561,
  "relatives work_opp language" = 0.003597122,
  "temp_prot" = 0.005395683,
  "work_opp" = 0.019784173,
  "work_opp accomm_opp" = 0.001798561,
  "work_opp accomm_opp cultural" = 0.001798561,
  "work_opp edu_opp" = 0.001798561,
  "work_opp language" = 0.005395683,
  "work_opp language edu_opp" = 0.001798561,
  "work_opp other" = 0.003597122,
  "work_opp other relatives" = 0.001798561,
  "work_opp relatives" = 0.003597122,
  "work_opp relatives cultural" = 0.001798561,
  "work_opp relatives language" = 0.003597122
)

# Convert to a data frame
reasons_country_ee <- split_category_proportions(category_props)
```

```{r}

#Accommodations issues proportions
freq_table_legal_diff <- table(data_ee$SHL07_SM_LIV_COND, useNA = "ifany")
prop_table_legal_diff <- prop.table(freq_table_legal_diff)
print(prop_table_legal_diff)

# variable SHL07_SM_LIV_COND
housing_issues_props <- c(
  do_not_feel_protected = 0.001798561,
  "do_not_feel_protected insufficient_privacy insufficient_sleeping_materials" = 0.001798561,
  dont_know = 0.023381295,
  inaccessible_by_transportation = 0.005395683,
  "inaccessible_by_transportation insufficient_privacy unable_to_cook_store_food" = 0.001798561,
  inaccessible_to_disabled = 0.003597122,
  insufficient_privacy = 0.014388489,
  "insufficient_privacy insufficient_sleeping_materials" = 0.001798561,
  "insufficient_privacy lack_of_showers_toilets" = 0.001798561,
  "insufficient_privacy rent_too_high" = 0.010791367,
  "insufficient_privacy unable_to_cook_store_food" = 0.001798561,
  "insufficient_privacy unclean_space rent_too_high" = 0.001798561,
  insufficient_sleeping_materials = 0.003597122,
  "insufficient_sleeping_materials insufficient_privacy" = 0.001798561,
  "insufficient_sleeping_materials rent_too_high" = 0.008992806,
  lack_of_showers_toilets = 0.028776978,
  "lack_of_showers_toilets insufficient_privacy" = 0.010791367,
  "lack_of_showers_toilets unable_to_cook_store_food" = 0.001798561,
  no_issues = 0.672661871,
  prefer_not_to_say = 0.010791367,
  rent_too_high = 0.167266187,
  "rent_too_high do_not_feel_protected" = 0.001798561,
  "rent_too_high insufficient_privacy" = 0.003597122,
  "rent_too_high insufficient_sleeping_materials" = 0.001798561,
  unable_to_cook_store_food = 0.008992806,
  "unable_to_cook_store_food lack_of_showers_toilets insufficient_privacy" = 0.001798561,
  "unable_to_cook_store_food lack_of_showers_toilets rent_too_high" = 0.001798561,
  "unable_to_cook_store_food unclean_space rent_too_high" = 0.001798561,
  "unclean_space rent_too_high" = 0.001798561
)

housing_issues_df <- split_category_proportions(housing_issues_props)
```

```{r}
# Healthcare issues proportions, host_country_healthcare_difficulties var
freq_table_legal_diff <- table(data_ee$host_country_healthcare_difficulties, 
                               useNA = "ifany")
prop_table_legal_diff <- prop.table(freq_table_legal_diff)
print(prop_table_legal_diff)

med_issue_props <- c(
 med_discrimination = 0.001798561,
  "med_discrimination med_language" = 0.001798561,
  "med_discrimination other" = 0.001798561,
  med_fees = 0.005395683,
  "med_fees med_documentation med_lack_info" = 0.001798561,
  "med_fees med_long_wait" = 0.001798561,
  "med_fees other" = 0.001798561,
  med_lack_info = 0.003597122,
  "med_lack_info other" = 0.001798561,
  med_language = 0.008992806,
  "med_language med_long_wait" = 0.005395683,
  med_long_wait = 0.104316547,
  "med_long_wait med_documentation" = 0.001798561,
  "med_long_wait med_fees" = 0.007194245,
  "med_long_wait med_fees med_language med_long_wait med_lack_info med_language med_discrimination" = 0.001798561,
  "med_long_wait med_language" = 0.021582734,
  "med_long_wait med_language med_discrimination" = 0.001798561,
  "med_long_wait med_not_available" = 0.001798561,
  "med_long_wait med_refused" = 0.003597122,
  "med_long_wait med_refused other" = 0.001798561,
  "med_long_wait other" = 0.014388489,
  med_not_available = 0.007194245,
  "med_not_available med_fees med_documentation" = 0.001798561,
  "med_not_available med_fees other" = 0.001798561,
  "med_not_available med_long_wait" = 0.010791367,
  "med_not_available med_long_wait other" = 0.003597122,
  "med_not_available med_refused" = 0.003597122,
  "med_not_available med_refused med_fees med_lack_info" = 0.001798561,
  "med_not_available med_refused med_long_wait" = 0.001798561,
  "med_not_available other" = 0.001798561,
  "med_refused med_long_wait" = 0.007194245,
  "med_refused med_long_wait med_language" = 0.003597122,
  "med_refused med_long_wait other" = 0.003597122,
  "med_refused other" = 0.003597122,
  other = 0.048561151,
  "other med_long_wait" = 0.003597122,
  "other med_refused" = 0.001798561,
  "<NA>" = 0.696043165
)

# Remove NA value column to find the actual weight of each issue among people
#who ran into it
#na_value <- med_issue_props["<NA>"]
#med_issue_props <- med_issue_props[!names(med_issue_props) %in% "<NA>"]
#total_non_na <- sum(med_issue_props)
#med_issue_props <- med_issue_props + (med_issue_props / total_non_na) * as.numeric(na_value)
#sum(med_issue_props)

med_issues_df <- split_category_proportions(med_issue_props)

```

```{r}

# Sources of household income proportions, host_country_SE2_11_SS_INC_SOR var
freq_table_legal_diff <- table(data_ee$host_country_SE2_11_SS_INC_SOR, 
                               useNA = "ifany")
prop_table_legal_diff <- prop.table(freq_table_legal_diff)
print(prop_table_legal_diff)

category_props_income <- c(
  "dont_know" = 0.010791367,
  "employment_host_country" = 0.379496403,
  "employment_host_country employment_remote social_protection_host_govt" = 0.001798561,
  "employment_host_country employment_remote social_protection_host_govt other_sources" = 0.001798561,
  "employment_host_country other_sources" = 0.001798561,
  "employment_host_country social_protection_host_govt" = 0.192446043,
  "employment_host_country social_protection_host_govt other_sources" = 0.003597122,
  "employment_host_country social_protection_host_govt social_protection_ukr_govt" = 0.007194245,
  "employment_host_country social_protection_ukr_govt" = 0.001798561,
  "employment_remote" = 0.008992806,
  "employment_remote other_sources" = 0.001798561,
  "employment_remote social_protection_host_govt" = 0.005395683,
  "no_income" = 0.059352518,
  "other_sources" = 0.01618705,
  "other_sources social_protection_host_govt" = 0.007194245,
  "prefer_not_to_answer" = 0.008992806,
  "social_protection_host_govt" = 0.197841727,
  "social_protection_host_govt employment_host_country" = 0.037769784,
  "social_protection_host_govt employment_host_country other_sources" = 0.001798561,
  "social_protection_host_govt employment_host_country social_protection_ukr_govt" = 0.001798561,
  "social_protection_host_govt employment_remote" = 0.001798561,
  "social_protection_host_govt other_sources" = 0.014388489,
  "social_protection_host_govt social_protection_ukr_govt" = 0.026978417,
  "social_protection_ukr_govt" = 0.003597122,
  "social_protection_ukr_govt social_protection_host_govt" = 0.003597122,
  "social_protection_ukr_govt social_protection_host_govt employment_host_country" = 0.001798561
)

income_sources_df <- split_category_proportions(category_props_income)

```

```{r}
# Difficulties in finding a job, host_country_diff_work var
freq_table_legal_diff <- table(data_ee$host_country_diff_work, 
                               useNA = "ifany")
prop_table_legal_diff <- prop.table(freq_table_legal_diff)
print(prop_table_legal_diff)

category_props_work <- c(
  "discrim" = 0.003597122,
  "discrim other" = 0.001798561,
  "lack_address" = 0.001798561,
  "lack_childcare" = 0.010791367,
  "lack_childcare lack_lang lack_recog" = 0.001798561,
  "lack_docum lack_lang" = 0.001798561,
  "lack_docum lack_opp lack_lang" = 0.001798561,
  "lack_docum lack_recog" = 0.001798561,
  "lack_info" = 0.001798561,
  "lack_lang" = 0.221223022,
  "lack_lang discrim" = 0.003597122,
  "lack_lang lack_address" = 0.005395683,
  "lack_lang lack_address discrim" = 0.001798561,
  "lack_lang lack_childcare" = 0.003597122,
  "lack_lang lack_childcare other" = 0.001798561,
  "lack_lang lack_info" = 0.001798561,
  "lack_lang lack_opp" = 0.019784173,
  "lack_lang lack_opp discrim" = 0.001798561,
  "lack_lang lack_opp lack_childcare" = 0.001798561,
  "lack_lang lack_opp lack_recog" = 0.008992806,
  "lack_lang lack_recog" = 0.052158273,
  "lack_lang lack_recog lack_info" = 0.001798561,
  "lack_lang lack_recog lack_opp" = 0.003597122,
  "lack_lang lack_recog loss_benefits" = 0.001798561,
  "lack_lang loss_benefits" = 0.005395683,
  "lack_lang not_staying" = 0.007194245,
  "lack_lang other" = 0.014388489,
  "lack_opp" = 0.017985612,
  "lack_opp discrim other" = 0.001798561,
  "lack_opp lack_childcare" = 0.001798561,
  "lack_opp lack_info" = 0.001798561,
  "lack_opp lack_info discrim" = 0.001798561,
  "lack_opp lack_lang" = 0.086330935,
  "lack_opp lack_lang discrim" = 0.001798561,
  "lack_opp lack_lang lack_recog" = 0.01618705,
  "lack_opp lack_lang lack_recog discrim" = 0.001798561,
  "lack_opp lack_lang lack_recog loss_benefits" = 0.005395683,
  "lack_opp lack_lang lack_recog loss_benefits discrim" = 0.001798561,
  "lack_opp lack_lang loss_benefits" = 0.003597122,
  "lack_opp lack_lang loss_benefits not_staying" = 0.001798561,
  "lack_opp lack_lang not_staying" = 0.003597122,
  "lack_opp lack_lang other" = 0.014388489,
  "lack_opp lack_recog" = 0.008992806,
  "lack_opp lack_recog lack_lang" = 0.003597122,
  "lack_permit" = 0.001798561,
  "lack_permit lack_docum" = 0.001798561,
  "lack_permit lack_docum lack_lang" = 0.001798561,
  "lack_permit lack_docum lack_lang lack_childcare" = 0.001798561,
  "lack_permit lack_docum lack_opp lack_lang discrim" = 0.001798561,
  "lack_permit lack_lang" = 0.005395683,
  "lack_permit lack_lang lack_recog" = 0.001798561,
  "lack_permit lack_opp" = 0.001798561,
  "lack_permit lack_opp lack_lang" = 0.01618705,
  "lack_recog" = 0.012589928,
  "lack_recog lack_lang" = 0.008992806,
  "lack_recog lack_lang lack_opp" = 0.005395683,
  "lack_recog lack_lang loss_benefits" = 0.001798561,
  "loss_benefits" = 0.001798561,
  "loss_benefits lack_recog" = 0.001798561,
  "none" = 0.316546763,
  "not_staying" = 0.012589928,
  "other" = 0.034172662,
  "other discrim" = 0.001798561,
  "prefer_no_answer" = 0.008992806
)

work_df <- split_category_proportions(category_props_work)

```
```{r}
# Hostility proportions, social_cohesion_SC4_SM_HOSTILE_TYP
freq_table_legal_diff <- table(data_ee$social_cohesion_SC4_SM_HOSTILE_TYP, 
                               useNA = "ifany")
prop_table_legal_diff <- prop.table(freq_table_legal_diff)
print(prop_table_legal_diff)

category_props_hostility <- c(
  "comments_news_forums" = 0.001798561,
  "comments_news_forums comments_social_media" = 0.008992806,
  "comments_news_forums comments_social_media discriminatory_behavior" = 0.003597122,
  "comments_news_forums comments_social_media verbal_aggression" = 0.012589928,
  "comments_news_forums comments_social_media verbal_aggression discriminatory_behavior" = 0.005395683,
  "comments_news_forums comments_social_media verbal_aggression other" = 0.001798561,
  "comments_news_forums discriminatory_behavior" = 0.003597122,
  "comments_news_forums other" = 0.001798561,
  "comments_news_forums verbal_aggression" = 0.005395683,
  "comments_news_forums verbal_aggression physical_attack" = 0.001798561,
  "comments_social_media" = 0.037769784,
  "comments_social_media comments_news_forums verbal_aggression other" = 0.001798561,
  "comments_social_media discriminatory_behavior" = 0.008992806,
  "comments_social_media other" = 0.003597122,
  "comments_social_media verbal_aggression" = 0.001798561,
  "comments_social_media verbal_aggression other" = 0.012589928,
  "discriminatory_behavior" = 0.025179856,
  "discriminatory_behavior comments_news_forums comments_social_media" = 0.001798561,
  "discriminatory_behavior other" = 0.005395683,
  "discriminatory_behavior verbal_aggression" = 0.003597122,
  "discriminatory_behavior verbal_aggression comments_social_media" = 0.001798561,
  "other" = 0.012589928,
  "other verbal_aggression" = 0.001798561,
  "physical_attack" = 0.001798561,
  "physical_attack discriminatory_behavior" = 0.003597122,
  "physical_attack other" = 0.003597122,
  "physical_attack verbal_aggression" = 0.007194245,
  "physical_attack verbal_aggression comments_news_forums comments_social_media" = 0.001798561,
  "physical_attack verbal_aggression discriminatory_behavior" = 0.001798561,
  "prefer_not_to_answer" = 0.001798561,
  "sexual_harassment" = 0.001798561,
  "verbal_aggression" = 0.084532374,
  "verbal_aggression comments_news_forums comments_social_media" = 0.001798561,
  "verbal_aggression comments_social_media" = 0.008992806,
  "verbal_aggression comments_social_media comments_news_forums" = 0.001798561,
  "verbal_aggression comments_social_media discriminatory_behavior" = 0.001798561,
  "verbal_aggression comments_social_media other" = 0.001798561,
  "verbal_aggression comments_social_media sexual_harassment discriminatory_behavior" = 0.001798561,
  "verbal_aggression discriminatory_behavior" = 0.032374101,
  "verbal_aggression discriminatory_behavior comments_social_media comments_news_forums" = 0.001798561,
  "verbal_aggression discriminatory_behavior physical_attack" = 0.001798561,
  "verbal_aggression other" = 0.026978417,
  "verbal_aggression physical_attack other" = 0.001798561,
  "<NA>" = 0.643884892
)

cohesion_df <- split_category_proportions(category_props_hostility)
```

```{r}
# Hostility proportions, social_cohesion_SC4_SM_HOSTILE_TYP
freq_table_legal_diff <- table(data_ee$Travel_Ukraine_temp_return_reason , 
                               useNA = "ifany")
prop_table_legal_diff <- prop.table(freq_table_legal_diff)
print(prop_table_legal_diff)

category_props_return <- c(
   "access_health" = 0.003597122,
  "access_health get_documents" = 0.001798561,
  "asked_empl" = 0.001798561,
  "check_propr" = 0.016187050,
  "check_propr access_health" = 0.001798561,
  "check_propr check_sit" = 0.001798561,
  "check_propr get_documents" = 0.003597122,
  "check_propr visit_relat" = 0.028776978,
  "check_propr visit_relat access_health" = 0.005395683,
  "check_propr visit_relat get_documents" = 0.008992806,
  "check_propr visit_relat get_supplies" = 0.001798561,
  "check_sit" = 0.005395683,
  "check_sit check_propr" = 0.001798561,
  "check_sit check_propr access_health" = 0.008992806,
  "check_sit check_propr visit_relat" = 0.008992806,
  "check_sit check_propr visit_relat access_health" = 0.001798561,
  "check_sit check_propr visit_relat get_documents access_health" = 0.001798561,
  "check_sit check_propr visit_relat get_documents other" = 0.001798561,
  "check_sit get_documents access_health" = 0.001798561,
  "check_sit visit_relat" = 0.001798561,
  "get_documents" = 0.014388489,
  "get_documents access_health" = 0.010791367,
  "get_documents other" = 0.001798561,
  "get_documents visit_relat" = 0.007194245,
  "help_relat" = 0.007194245,
  "help_relat check_propr" = 0.001798561,
  "help_relat get_documents access_health" = 0.003597122,
  "other" = 0.007194245,
  "visit_relat" = 0.066546763,
  "visit_relat access_health" = 0.014388489,
  "visit_relat access_health check_propr" = 0.001798561,
  "visit_relat access_health get_documents" = 0.001798561,
  "visit_relat access_health get_supplies" = 0.001798561,
  "visit_relat check_propr" = 0.007194245,
  "visit_relat check_propr access_health" = 0.003597122,
  "visit_relat check_propr get_documents access_health" = 0.001798561,
  "visit_relat check_sit" = 0.001798561,
  "visit_relat get_documents" = 0.017985612,
  "visit_relat get_documents access_health" = 0.007194245,
  "visit_relat get_documents get_supplies" = 0.001798561,
  "visit_relat get_documents other" = 0.003597122,
  "visit_relat get_supplies" = 0.003597122,
  "visit_relat get_supplies access_health" = 0.003597122,
  "visit_relat get_supplies get_documents access_health" = 0.003597122,
  "visit_relat help_relat" = 0.001798561,
  "visit_relat help_relat get_documents" = 0.001798561,
  "visit_relat other" = 0.003597122,
  "<NA>" = 0.687050360
)


return_df <- split_category_proportions(category_props_return)
```

```{r}

add_source_label <- function(df, source_name) {
  df <- df[, c("Component", "Total_Proportion")]  
  df$Source <- source_name
  return(df)
}

df_list <- list(
  work = work_df,
  income_sources = income_sources_df,
  med_issues = med_issues_df,
  housing_issues = housing_issues_df,
  reasons_country = reasons_country_ee,
  cohesion = cohesion_df,
  return = return_df
)

combined_df <- imap_dfr(df_list, ~ add_source_label(.x, .y))

saveRDS(data_ee, "data_ee")
saveRDS(combined_df, "combined_df")
```